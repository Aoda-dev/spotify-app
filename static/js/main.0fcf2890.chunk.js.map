{"version":3,"sources":["assets/spotify-logo.png","assets/mp3/demonSlayer1.mp3","assets/mp3/katawaredoki.mp3","components/Navbar/Navbar.js","pages/MainPage/wrapper-items/WrapperItems.js","pages/MainPage/MainPage.js","pages/CollectionPage/CollectionPage.js","pages/MyPlaylistPage/MyPlaylistPage-list/List.js","pages/MyPlaylistPage/MyPlaylistPage.js","pages/ProfilePage/ProfilePage.js","components/Audio/Audio.js","assets/mp3/AudioAssets.js","store/store.js","components/UI/Loader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","className","to","src","spotifyLogo","alt","exact","style","marginTop","opacity","favorite","map","item","idx","favPlaylistId","playlists","id","key","color","textDecoration","name","WrapperItems","imgsrc","title","MainPage","playlist","CollectionPage","favoritePlaylists","List","options","album","storeId","onClick","changeMusic","bind","time","MyPlaylistPage","match","params","backgroundImage","imgheader","event","navFavAdd","find","width","musicList","ProfilePage","AudioDiv","React","useState","isPlay","setPlay","music","e","preventDefault","player","pause","play","AudioAssets","tracks","katawareDoki","demonSlayer","userData","isLiked","playlistData","Loader","App","loading","times","setLoading","setTimeout","user","setUser","setMusic","musicElem","track","Audio","setPlayer","target","textContent","$user","push","length","node","splice","$music","musicSrc","$musicSrc","newMusic","backgroundColor","height","display","justifyContent","alignItems","Fragment","path","render","component","PlayListPage","textAlign","Boolean","window","location","hostname","app","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0fcf2890.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotify-logo.d668c23b.png\";","module.exports = __webpack_public_path__ + \"static/media/demonSlayer1.ddf79d10.mp3\";","module.exports = __webpack_public_path__ + \"static/media/katawaredoki.677c3bc0.mp3\";","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport spotifyLogo from '../../assets/spotify-logo.png'\r\nimport './Navbar.css'\r\n\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <div className=\"Navbar-logo\">\r\n        <Link to=\"/\">\r\n          <img src={spotifyLogo} alt=\"\"/>\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"Navbar-list\">\r\n        <ul>\r\n          <NavLink to=\"/\" exact>\r\n            <li>\r\n              <span className=\"material-icons Navbar-span-icon\">home</span>\r\n              <span className=\"Navbar-span-text\">Home</span>\r\n            </li>\r\n          </NavLink>\r\n          <NavLink to=\"/about\">\r\n            <li>\r\n              <span className=\"material-icons Navbar-span-icon\">search</span>\r\n              <span className=\"Navbar-span-text\">About me</span>\r\n            </li>\r\n          </NavLink>\r\n          <NavLink to=\"/collection\">\r\n            <li>\r\n              <span className=\"material-icons Navbar-span-icon\">library_music</span>\r\n              <span className=\"Navbar-span-text\">My Collection</span>\r\n            </li>\r\n          </NavLink>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"Navbar-playlist\">\r\n        <h5>PLAYLISTS</h5>\r\n        <div>\r\n          <div className=\"material-icons add-icon\">add</div>\r\n          <span>Create Playlist</span>\r\n        </div>\r\n        <div>\r\n          <div className=\"material-icons favorite-icon\">favorite</div>\r\n          <span>Favorite Tracks</span>\r\n        </div>\r\n          <hr style={{marginTop: '10px', opacity: '.2'}} />\r\n          <div className=\"navbar-favorite-list\">\r\n            <ul>\r\n              {\r\n                props.favorite.map((item, idx) => {\r\n                  if (item.favPlaylistId === props.playlists[item.favPlaylistId - 1].id) {\r\n                    return (\r\n                        <li key={item.id + idx}>\r\n                          <Link\r\n                            to={'/playlist/' + props.playlists[item.favPlaylistId - 1].id}\r\n                            style={{color: '#fff', textDecoration: 'none'}}  \r\n                          >\r\n                            {props.playlists[item.favPlaylistId - 1].name}\r\n                          </Link>\r\n                        </li>\r\n                    )\r\n                  }\r\n                  return null\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './WrapperItems.css'\r\n\r\nconst WrapperItems = (props) => {\r\n  return (\r\n    <div className=\"Items\">\r\n      <Link to={`/playlist/${props.id}`}>\r\n        <img src={props.imgsrc} alt=\"\" />\r\n        <p className=\"Items-p1\">{props.name}</p>\r\n        <p className=\"Items-p2\">{props.title}</p>\r\n        <div className=\"material-icons Items-go\">play_arrow</div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WrapperItems\r\n","import React from 'react'\r\nimport './MainPage.css'\r\nimport WrapperItems from './wrapper-items/WrapperItems'\r\n\r\nconst MainPage = (props) => {\r\n  return (\r\n    <div className=\"MainPage\">\r\n      <div className=\"wrapper\">\r\n        <h2>Only for you, Aoda</h2>\r\n        <small>The more music you listen to, the darker the recommendations.</small>\r\n        <div className=\"wrapper-items\">\r\n          {\r\n            props.playlists.map((playlist, idx) => {\r\n              return (\r\n                <WrapperItems \r\n                  id={playlist.id}\r\n                  key={playlist.name + idx}\r\n                  imgsrc={playlist.imgsrc}\r\n                  name={playlist.name}\r\n                  title={playlist.title}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport WrapperItems from '../MainPage/wrapper-items/WrapperItems'\r\nimport './CollectionPage.css'\r\n\r\nconst CollectionPage = (props) => {\r\n  return (\r\n    <div className=\"CollectionPage\">\r\n      <div className=\"CollectionPageItems\">\r\n        <h2>Collection Page</h2>\r\n        <div className=\"CollectionPageItems-small\">\r\n          <small>There are all of you liked playlists</small>\r\n        </div>\r\n        <div className=\"Collection-items\">\r\n          { props.favoritePlaylists.map((playlist, idx) => {\r\n            if (playlist.favPlaylistId === props.playlists[playlist.favPlaylistId - 1].id) {\r\n              return (\r\n                <div className=\"Collection-wrap\">\r\n                  <WrapperItems\r\n                    key={playlist.id + idx}\r\n                    id={props.playlists[playlist.favPlaylistId - 1].id}\r\n                    imgsrc={props.playlists[playlist.favPlaylistId - 1].imgsrc}\r\n                    name={props.playlists[playlist.favPlaylistId - 1].name}\r\n                    title={props.playlists[playlist.favPlaylistId - 1].title}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n            return null\r\n          }) }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectionPage\r\n","import React from 'react'\r\nimport './list.css'\r\n\r\nconst List = (props) => {\r\n  const options = {\r\n    id: props.id,\r\n    name: props.name,\r\n    album: props.album,\r\n    imgsrc: props.imgsrc,\r\n    storeId: props.storeId\r\n  }\r\n  \r\n  return (\r\n    <div onClick={props.changeMusic.bind(this, {...options})} className=\"mypage-list\">\r\n      <span className=\"mypage-id\">{props.id}</span>\r\n      <span className=\"mypage-name\">{props.name}</span>\r\n      <span className=\"mypage-album\">{props.album}</span>\r\n      <span className=\"mypage-time\">{props.time}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\nimport List from './MyPlaylistPage-list/List'\r\nimport './MyPlaylistPage.css'\r\n\r\nconst MyPlaylistPage = (props) => {\r\n\r\n  const id = props.match.params.id\r\n  const playlist = props.playlists[id - 1]\r\n\r\n  const isLike = () => {\r\n    const navMusic = props.favoritePlaylists.find((item, idx) => {\r\n      if (item.favPlaylistId === playlist.id) {\r\n        return item\r\n      }\r\n      return null\r\n    })\r\n    \r\n    return navMusic\r\n  }\r\n\r\n  const style = {\r\n    backgroundImage: `url(${playlist.imgheader})`\r\n  }\r\n  \r\n  return (\r\n    <div className=\"MyPlayListPage\">\r\n      <div style={style} className=\"MyPlayListPage-header\">\r\n        <div className=\"MyPlayListPage-headerBack\">\r\n          <div className=\"MyPlayListPage-inside-header\">\r\n            <img src={playlist.imgsrc} alt=\"\"/>\r\n            <div className=\"MyPlayListPage-inside-text\">\r\n              <h5>PLAYLIST</h5>\r\n              <p className=\"p1\">{playlist.name}</p>\r\n              <p className=\"p2\">{playlist.title}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"MyPlayListPage-inside-bottom\">\r\n             <div className=\"material-icons playarrow\">play_arrow</div>\r\n             <div \r\n                onClick={(event) => props.navFavAdd(event, playlist)}\r\n                className=\"material-icons favorite\"\r\n              >{ !isLike() ? 'favorite_border' : 'favorite' }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"MyPlayListPage-list\">\r\n        <div className=\"MyPlayListPage-stats\">\r\n          <span className=\"stats-hash\">#</span>\r\n          <span className=\"stats-name\">NAME</span>\r\n          <span className=\"stats-album\">ALBUM</span>\r\n          <span className=\"material-icons stats-clock\">schedule</span>\r\n        </div>\r\n        \r\n        <hr style={{width: '92%', opacity: '0.2'}} />\r\n        \r\n        {\r\n          playlist.musicList \r\n            ? playlist.musicList.map((item, idx) => {\r\n                return (\r\n                  <List\r\n                    storeId={playlist.id}\r\n                    imgsrc={playlist.imgsrc}\r\n                    changeMusic={props.changeMusic}\r\n                    key={item.name + idx}\r\n                    id={item.id}\r\n                    name={item.name}\r\n                    album={playlist.name}\r\n                    time={item.time}\r\n                  />\r\n                )\r\n              })\r\n            : null\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPlaylistPage\r\n","import React from 'react'\r\nimport './ProfilePage.css'\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <div className=\"ProfilePage\">\r\n      <h1>Profile Page</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","import React from 'react'\r\nimport './Audio.css'\r\n\r\nconst AudioDiv = (props) => {\r\n  const [isPlay, setPlay] = React.useState(false)\r\n\r\n  const toggleMusic = (e) => {\r\n    e.preventDefault()\r\n    isPlay ? props.player.pause() : props.player.play()\r\n    \r\n    setPlay(!isPlay)\r\n  }\r\n\r\n  return (\r\n    <div className=\"Audio\">\r\n      <div className=\"Audio-titles\">\r\n        <img src={props.music.imgsrc} alt=\"\"/>\r\n        <span>{props.music.name} <br /> <p>{props.music.album}</p></span>\r\n        \r\n      </div>\r\n      <div className=\"Audio-main\">\r\n        <span className=\"material-icons\">skip_previous</span>\r\n          <span \r\n            onClick={toggleMusic} \r\n            className=\"material-icons play\"\r\n          >{!isPlay ? 'play_arrow' : 'pause' }</span>\r\n        <span className=\"material-icons\">skip_next</span>\r\n      </div>\r\n      <div className=\"Audio-volume\">\r\n        <span className=\"material-icons\">volume_up</span>\r\n        <div className=\"volume-progress\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AudioDiv\r\n","import demonSlayer from './demonSlayer1.mp3'\r\nimport katawareDoki from './katawaredoki.mp3'\r\n\r\nexport const AudioAssets = [\r\n  {\r\n    id: 5,\r\n    tracks: [\r\n      {id: 1, src: katawareDoki}\r\n    ]\r\n  },\r\n  {\r\n    id: 6,\r\n    tracks: [\r\n      {id: 1, src: demonSlayer},\r\n      {id: 2, src: 'just test'}\r\n    ]\r\n  }\r\n]","export const userData = {\r\n  name: 'Aoda',\r\n  favoritePlaylists: [\r\n    {id: 1, favPlaylistId: 3, isLiked: true},\r\n  ]\r\n}\r\n\r\nexport const playlistData = [\r\n  {\r\n    id: 1,\r\n    name: 'Mood Booster',\r\n    title: `Get happy with today's dose of feel-good songs`,\r\n    imgsrc: 'https://vignette.wikia.nocookie.net/anime-characters-fight/images/b/b9/Hhui%3Bl%2C.png/revision/latest?cb=20151102031347&path-prefix=ru'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Nightcore',\r\n    title: `Nightcore music for gaming`,\r\n    imgsrc: 'https://i.pinimg.com/564x/ea/e2/96/eae296218e93c4d3b0e3c923b2e60541.jpg',\r\n    imgheader: 'https://cdnb.artstation.com/p/assets/images/images/023/138/759/original/helena-viana-anime-girl-welcome-by-ell.gif?1578239624'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Your lie in April',\r\n    title: `Best piano OST form your April lie`,\r\n    imgsrc: 'https://i.pinimg.com/564x/9e/d1/90/9ed190d9415515dfce95a02c5e0e3595.jpg',\r\n    imgheader: 'https://coverfiles.alphacoders.com/430/43078.jpg'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Fairy Tail',\r\n    title: `The best emotional track's from Fairy tail`,\r\n    imgsrc: 'https://img.utdstc.com/screen/13/fairy-tail-wallpaper.jpg:300',\r\n    imgheader: 'https://i.pinimg.com/originals/0e/4d/79/0e4d795294444949bd21a1b2a560496e.jpg'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Your name',\r\n    title: `Kimi no na wa OST Radwimps`,\r\n    imgsrc: 'https://images.alphacoders.com/736/thumb-1920-736461.png',\r\n    imgheader: 'https://coverfiles.alphacoders.com/369/36914.png',\r\n    musicList: [\r\n      {\r\n        id: 1,\r\n        name: 'Radwimps - Kataware Doki',\r\n        time: '2:47'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Demon Slayer',\r\n    title: `kimetsu no yaiba freezing osts`,\r\n    imgsrc: 'https://gadgetfreeks.com/wp-content/uploads/2020/05/Kimetsu-no-Yaiba-Chapter-205.jpg',\r\n    imgheader: 'https://coverfiles.alphacoders.com/951/95105.jpg',\r\n    musicList: [\r\n      {\r\n        id: 1,\r\n        name: 'Kamado tanjiro no uta',\r\n        time: '4:07',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Kamado tanjiro no uta',\r\n        time: '2:37'\r\n      }\r\n    ]\r\n  }\r\n]","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\nimport './App.css'\nimport {Switch, Route} from 'react-router-dom'\nimport Navbar from './components/Navbar/Navbar'\nimport MainPage from './pages/MainPage/MainPage'\nimport CollectionPage from './pages/CollectionPage/CollectionPage'\nimport PlayListPage from './pages/MyPlaylistPage/MyPlaylistPage'\nimport ProfilePage from './pages/ProfilePage/ProfilePage'\nimport AudioDiv from './components/Audio/Audio'\nimport {AudioAssets} from './assets/mp3/AudioAssets'\nimport {playlistData, userData} from './store/store'\nimport Loader from './components/UI/Loader'\n\nconst App = () => {\n  const [loading, setLoading] = React.useState({\n    loading: true,\n    times: 0\n  })\n\n  setTimeout(() => {\n    setLoading({\n      loading: false,\n      times: 1\n    })\n  }, 4000);\n\n  const [user, setUser] = React.useState(userData)\n  const [playlists] = React.useState(playlistData)\n  const [music, setMusic] = React.useState({\n    id: 1,\n    name: 'Kamado tanjiro no uta',\n    imgsrc: 'https://gadgetfreeks.com/wp-content/uploads/2020/05/Kimetsu-no-Yaiba-Chapter-205.jpg',\n    album: 'Demon Slayer',\n    storeId: 6\n  })\n\n  const musicElem = AudioAssets.find(track => {\n    if (track.id === music.storeId) {\n      return track\n    }\n    return null\n  })\n\n  const [player, setPlayer] = React.useState(new Audio(musicElem.tracks[0].src))\n  \n  const navFavAdd = (event, playlist) => {\n    if (event.target.textContent === 'favorite_border') {\n      const $user = user\n\n      $user.favoritePlaylists.push({\n        id: user.favoritePlaylists.length + 1,\n        favPlaylistId: playlist.id\n      })\n\n      setUser({...$user})\n    }\n\n    if (event.target.textContent === 'favorite') {\n      const $user = user\n\n      const node = $user.favoritePlaylists.find((item) => item.favPlaylistId === playlist.id)\n\n      $user.favoritePlaylists.splice(node.id - 1, 1)\n\n      setUser({...$user})\n    }\n  }\n\n  const changeMusic = (options) => {\n    player.pause()\n    \n    const $music = music\n    $music.name = options.name\n    $music.album = options.album\n    $music.imgsrc = options.imgsrc\n    \n    const musicSrc = AudioAssets.find(track => {\n      if (track.id === options.storeId) {\n        return track\n      }\n      return null\n    })\n\n    const $musicSrc = musicSrc.tracks.find(track => {\n      if (track.id === options.id) {\n        return track\n      }\n      return null\n    })\n    \n    setMusic({...$music})\n\n    const newMusic = new Audio(musicSrc.tracks[$musicSrc.id - 1].src)\n    newMusic.play()    \n    setPlayer(newMusic)    \n  } \n\n  return (\n    <div className=\"App\">\n      {\n        !loading.loading\n          ? <React.Fragment>\n              <Navbar playlists={playlists} favorite={user.favoritePlaylists} />\n              <AudioDiv player={player} music={music} />\n        \n              <Switch>\n                <Route path=\"/\" exact render={() => <MainPage playlists={playlists} />}></Route>\n                <Route path=\"/collection\" render={\n                  () => <CollectionPage\n                          favoritePlaylists={user.favoritePlaylists} \n                          playlists={playlists}\n                        />\n                }/>\n                <Route path=\"/playlist/:id\" \n                  component={ (props) => \n                      <PlayListPage \n                      {...props}\n                      favoritePlaylists={user.favoritePlaylists}\n                      navFavAdd={navFavAdd}\n                      changeMusic={changeMusic} \n                      playlists={playlists} />\n                }/>\n                <Route path=\"/playlist\" component={PlayListPage}/>\n                <Route path=\"/profile\" component={ProfilePage}/>\n                <Route render={() => {\n                  return (\n                    <h1 style={{color: 'red', textAlign: 'center'}}>4o4 not found</h1>\n                  )\n                }} />\n              </Switch>\n            </React.Fragment>\n          : <div style={{backgroundColor: 'rgba(0, 0, 0)' ,width: '100%', height: '100vh', \n            display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n              <Loader />\n            </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { HashRouter } from 'react-router-dom'\n\nconst app = (\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}